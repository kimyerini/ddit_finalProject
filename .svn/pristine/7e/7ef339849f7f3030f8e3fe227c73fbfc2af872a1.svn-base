package kr.or.ddit.common.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.json.simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.common.service.SmsHistoryService;
import kr.or.ddit.common.service.SmsService;
import kr.or.ddit.common.vo.SmsHistoryVO;
import kr.or.ddit.common.vo.SmsVO;
import net.nurigo.java_sdk.api.Message;
import net.nurigo.java_sdk.exceptions.CoolsmsException;

import lombok.extern.slf4j.Slf4j;


@Controller
@RequestMapping("/sms")
@Slf4j
public class SmsController {
	@Autowired
	SmsService smsService;
	
	@Autowired
	SmsHistoryService smsHisService;
	
	
	@GetMapping("/main")
	public String smsMain() {
		return "sms/sms";
	}
	
	@ResponseBody
	@PostMapping("/send")
	public String sendSms(@RequestBody List<SmsHistoryVO> smsHisVOList) {
		  log.info("리스트왔니!"+smsHisVOList.toString());
		  String api_key = "NCS2CSTDFPRW9CEP";
		  String api_secret = "VI7T7ELTAO7MST05VCFRDHSKD9EEFHYP";
		  Message coolsms = new Message(api_key, api_secret);

		  HashMap<String, String> set = new HashMap<String, String>();
		  SmsHistoryVO smsHisVO = new SmsHistoryVO();
		  
		  for(int i=0; i<smsHisVOList.size(); i++ ) {
			  smsHisVO = smsHisVOList.get(i);
			  smsHisVO.setSmsHisSender("01043075115");
			  log.info("다중문자!!!:"+smsHisVO);
			  set.put("to", smsHisVO.getSmsHisReceiver()); // 수신번호
	
			  set.put("from", smsHisVO.getSmsHisSender()); // 발신번호
			  set.put("text", smsHisVO.getSmsHisCn()); // 문자내용
			  set.put("type", "sms"); // 문자 타입
			  set.put("app_version", "test app 1.2"); 
	
			  log.info("문자입니당" + set.toString());
			  try {
				  JSONObject result = coolsms.send(set); // 보내기&전송결과받기
				  
				  System.out.println(result.toString());
				  smsHisService.insertSMSHis(smsHisVO);
				  
			  } catch (CoolsmsException e) {
			      System.out.println(e.getMessage());
			      System.out.println(e.getCode());
			  }
		  }
		  return "SUCCESS";
	}
	
	@ResponseBody
	@GetMapping("/list")
	public List<SmsVO> getSmsList(){
		List<SmsVO> list = new ArrayList<SmsVO>();
		list = smsService.getSmsList();
		return list;
	}
	
	@ResponseBody
	@GetMapping("/getSms/{smsNm}")
	public SmsVO getSms(@PathVariable(value="smsNm") String smsNm) {
		SmsVO smsVO = new SmsVO();
		smsVO.setSmsNm(smsNm);
		smsVO = smsService.getSms(smsVO);
		return smsVO;
	}
}
