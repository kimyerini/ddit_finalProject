<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>

<script
	src="https://cdnjs.cloudflare.com/ajax/libs/gridstack.js/9.1.0/gridstack-all.min.js"></script>
<script type="text/javascript" src="/resources/js/jquery-3.6.0.js"></script>
<link
	href="https://cdnjs.cloudflare.com/ajax/libs/gridstack.js/9.1.0/gridstack.min.css"
	rel="stylesheet" />

<link href="/resources/css/demo.css" rel="stylesheet" />

<style>
.reqQy {
	float: left;
	margin-bottom: 0;
}

#buttons {
	display: flex;
	align-items: center;
}

#searchBar {
	float: right;
	width: 30%;
}

#ii {
	width: 100%;
	height: 48%;
	margin-bottom: 10px;
}

#dd {
	width: 100%;
	height: 49%;
	margin-bottom: 10px;
}

.card-header {
	font-weight: bold;
	text-align: left;
}

.left-align {
	text-align: left;
	margin: 5px;
}
.form-labelDiv{
/* 	float: left; */
}
.form-label{
	width:60px;
	text-align:left;
}


</style>
<script>
let rowIndexs;
$(function() {
	    // 페이지가 로드될 때 약품 리스트를 보이게 함
	    showMediList();
	    tabletrtd();
	    $("#submitBtnItem").prop("hidden", true);
	    $("#submitBtnMedi").prop("disabled", false);
    	$("#submitBtnMedi").prop("hidden", false); // 약품
	    // 약품 탭 클릭 이벤트 핸들러
	    $("#mediItem").on("click", function() {
	        showMediList(); // 약품 리스트 보이기
			tabletrtd();
        	$("#medicheck").text("약품신청확인");
        	$("#medicheckOK").text("약품신청");
        	$("#formItemCode").text("약품코드");
        	$("#formItemName").text("약품명");
        	$("#thItemCode").text("약품코드");
        	$("#thItemName").text("약품명");
        	$("#submitBtnMedi").prop("disabled", false);
        	$("#submitBtnItem").prop("disabled", true);
        	$("#submitBtnMedi").prop("hidden", false); // 약품 탭에서 버튼 표시
        	$("#submitBtnItem").prop("hidden", true);  // 비품 탭에서 버튼 숨김
 			$("#itemName").val("");
     		$("#itemCode").val("");
    	 	$("#reqQy").val("");
    	 	
	    });

	    // 비품 탭 클릭 이벤트 핸들러
	    $("#item").on("click", function() {
	        showItemList(); // 비품 리스트 보이기
			tabletrtd();
	        $("#medicheck").text("비품신청확인");
	        $("#medicheckOK").text("비품신청");
	        $("#formItemCode").text("비품코드");
	        $("#formItemName").text("비품명");
	        $("#thItemCode").text("비품코드");
	        $("#thItemName").text("비품명");
	        $("#submitBtnMedi").prop("disabled", true);
	        $("#submitBtnItem").prop("disabled", false);
	        $("#submitBtnMedi").prop("hidden", true);  // 약품 탭에서 버튼 숨김
	        $("#submitBtnItem").prop("hidden", false); // 비품 탭에서 버튼 표시
 			$("#itemName").val("");
     		$("#itemCode").val("");
     		$("#reqQy").val("");
     		
		});


	    // 검색 버튼 클릭 이벤트 핸들러
	    $("#searchButton").on("click", function() {
	        // 현재 활성화된 탭에 따라 검색 함수 호출
	        if ($("#mediItem").hasClass("active")) {
	            searchMediItem(); // 약품 탭이 활성화되었을 때 약품 검색 함수 호출
	        } else if ($("#item").hasClass("active")) {
	            searchItem(); // 비품 탭이 활성화되었을 때 비품 검색 함수 호출
	        }
	    });
	    

	    // 약품 리스트 출력 함수
	    function showMediList() {
	        $("#mediItem").addClass("active"); // 약품 탭 활성화
	        $("#item").removeClass("active"); // 비품 탭 비활성화
	        mediItemList(); // 약품 리스트 조회
	        $("#mediInventory").on("click", "td a", function () {
	            var codeValue = $(this).text();
	            $("#itemCode").val(codeValue);
				mediItemName();
	        });
	    }

	    // 비품 리스트 출력 함수
	    function showItemList() {
	        $("#item").addClass("active"); // 비품 탭 활성화
	        $("#mediItem").removeClass("active"); // 약품 탭 비활성화
	        itemList(); // 비품 리스트 조회
	        $("#mediInventory").on("click", "td a", function () {
	            var codeValue = $(this).text();
	            $("#itemCode").val(codeValue);
	            itemName();
	        });
	    }


	// 약품 신청 탭에서 취소를 눌렀을때
	$("#cancellItem").on("click",function(){
		$("#itemCode").val("");
		$("#itemName").val("");
		$("#reqQy").val("");
	});
	
	
	// 약품 신청 탭에서 완료를 눌렀을때 
	rowIndex = 2;
	$("#apcBtn").on("click", function () {
		alert("aaa"+rowIndex);	
	    let code = $("#code").val();
	    let itemName = $("#itemName").val();
	    let itemCode = $("#itemCode").val();  // 약품 코드값
	    let reqDate = $("#reqDate").val();
	    let reqQy = $("#reqQy").val();
	    let tdValue = $('#uptable tr:nth-child(' + rowIndex + ') td:eq(1)').text().trim();
	    
	    console.log("???" ,code,itemName,itemCode,reqDate,reqQy);
		
		// 이미 추가 되어있으면 거부
		let exTrs = document.querySelectorAll("#uptable>tr");
		for(let i=0; i<exTrs.length; i++){
	
			if( exTrs[i].children[i]  && exTrs[i].children[i].innerHTML == itemCode){
				alert("이미 넣은 약품이예용");
				$("#itemCode").val("");
				$("#itemName").val("");
				$("#reqQy").val("");
				return;      // 함수 종료
			}
		}
		
		//rowIndex 보정
		$(".uptableTrCounter").each(function(i){
			console.log(i + "번째 텍스트 : " + $(this).text());
			
			if($(this).text()!=""){
				rowIndex = (i+3);
				console.log("rowIndex : " + rowIndex);
			}
		});
		

		
	  	if(tdValue==""){
	    // 첫 번째 행의 각각의 td에 데이터 추가
	    	$('#uptable tr:nth-child('+rowIndex+') td:eq(0)').children().eq(0).attr("data-medi-item-code",itemCode).attr("data-medi-item-req-qy",reqQy);
	    	$('#uptable tr:nth-child('+rowIndex+') td:eq(0)').children().eq(0).prop("checked",true);
		    $('#uptable tr:nth-child('+rowIndex+') td:eq(1)').text(itemCode); // 첫 번째 행의 두 번째 td
		    $('#uptable tr:nth-child('+rowIndex+') td:eq(2)').text(itemName); // 첫 번째 행의 세 번째 td
		    $('#uptable tr:nth-child('+rowIndex+') td:eq(3)').text(reqQy); // 첫 번째 행의 네 번째 td
		    $('#uptable tr:nth-child('+rowIndex+') td:eq(4)').text(reqDate); // 첫 번째 행의 다섯 번째 td
	    	
		    rowIndex++;
	  	}
	    
	    // 입력 필드 초기화
	
	    $("#itemName").val("");
	    $("#itemCode").val("");
	    $("#reqQy").val("");
	
	    console.log("체크으으으", code, itemName, itemCode, reqDate, reqQy);
	
});
	
// 	$("#cancelBtn").on("click", function () {
// 	    $('#uptable tr:gt(0)').find('td:gt(0)').each(function () {
// 	        $(this).text('');
// 	    });

// 	    // 입력 필드 초기화
// 	    $("#itemName").val("");
// 	    $("#itemCode").val("");
// 	    $("#reqQy").val("");
		
// 	 // rowIndex 변수 초기화
// 	    rowIndex = 2;
// 	});
// 	$("#cancelBtn").on("click", function () {
//     // 체크된 체크박스를 반복하여 처리
//     $('#uptable input[type="checkbox"]:checked').each(function () {
//         var $tr = $(this).closest('tr'); // 현재 체크박스의 부모 행 가져오기
//         var $tds = $tr.find('td:not(:first)'); // 체크박스를 제외한 모든 <td> \ 가져오기

//         // 각 <td>  대해 처리
//         $tds.each(function () {
//             var $td = $(this);
//             var currentText = $td.text().trim();

//             // 값이 이미 null이면 체크를 해제하고 해당 <td>는 수정하지 않음
//             if (currentText == "") {
//                 $td.siblings(':first').find('input[type="checkbox"]').prop("checked", false);
//             } else {
//                 $td.text(''); // 값이 null이 아니면 <td>의 내용을 지움
//             }
//         });
//         $tr.remove();
//     });

//     // 입력 필드 초기화
//     $("#itemName").val("");
//     $("#itemCode").val("");
//     $("#reqQy").val("");

//     // rowIndex 변수 초기화
//     rowIndex = 2;
// });
	


	
	// 이름 가져오는 함수 약품
	function mediItemName(){
	    	let code = $("#itemCode").val();
			console.log("약품 이름 가져오는  :",code);
			$.ajax({
				method:"get",
				url : "/item/InventoryInsertmediItemName",
				data: { "code" : code },
				dataType: "json",
				contentType:"application/json;charset=utf-8",
				success: function(rslt){
					console.log("코드2", rslt.mediItemName);
					 $("#itemName").val(rslt.mediItemName);
					
				},
				error: function(xhr, status, error) {
	        	    console.log("code: " + xhr.status);
	        	    console.log("message: " + xhr.responseText);
	        	    console.log("error: " + error);
	        	}
			})
	    }
	    // 이름 가져오는 함수 비품 
	    function itemName(){
	    	let code = $("#itemCode").val();
			console.log("비품 이름 가져오는 :",code);
	    	
			$.ajax({
				method:"get",
				url : "/item/InventoryInsertItemName",
				data: { "code" : code },
				dataType: "json",
				contentType:"application/json;charset=utf-8",
				success: function(rslt){
					console.log("코드2", rslt.itemName);
					 $("#itemName").val(rslt.itemName);
					
				},
				error: function(xhr, status, error) {
	        	    console.log("code: " + xhr.status);
	        	    console.log("message: " + xhr.responseText);
	        	    console.log("error: " + error);
	        	}
			})
	    }
	// 서치 ajax 함수 비품
	function searchItem(fitem){
		let serchtext = $("#searchText").val();
		console.log("메롱:",serchtext)
		$.ajax({
			method:"get",
	         url: "/item/InventorySearchItem",
	         dataType : "json",
	         data: "keyword="+serchtext,
	         success: function(rslt) {
	        	 console.log("체크", rslt);
	        	 var newRow = "";
     	        newRow += itemtrtd();
     	        
     	       $.each(rslt, function(index, item) {
       	        // 각 열(td)에 데이터를 추가합니다.
       	        newRow +="<tr>";
       	    	newRow +="<td><a href='#'>" + item.itemCode + "</a></td>";
       	        newRow +="<td>" + item.itemName + "</td>";
       	        newRow +="<td>" + item.itemMakr + "</td>";
       	        newRow +="<td>" + item.itemUsage + "</td>";
       	        newRow +="<td>" + item.itemPrice + "</td>";
       	        newRow +="<td>" + item.itemInvrQty + "</td>";
       	        newRow +="<td>" + item.itemInvrLeastQty + "</td>";
       	        newRow +="<td>" + item.itemInvrRegDateStr + "</td>";
       	        newRow +="</tr>";
     	      });
   	        $("#mediInventory").html(newRow);
	         },
	         error: function(xhr, status, error) {
	        	    console.log("code: " + xhr.status);
	        	    console.log("message: " + xhr.responseText);
	        	    console.log("error: " + error);
	        	}
		})
	}
	// 서치 ajax 함수 약품
	function searchMediItem(fitem){
		let serchtext = $("#searchText").val();
		console.log("메롱:",serchtext)
		$.ajax({
			method:"get",
	         url: "/item/InventorySearchMediItem",
	         dataType : "json",
	         data: "keyword="+serchtext,
	         success: function(rslt) {
	        	 console.log("체크", rslt);
	        	 var newRow = "";
     	        newRow += mediItemtrtd();
     	        
     	       $.each(rslt, function(index, item) {
       	        // 각 열(td)에 데이터를 추가합니다.
     	    	  newRow +="<tr>";
      	        newRow +="<td><a href='#'>" + item.mediItemCode + "</a></td>";
      	        newRow +="<td>" + item.mediItemName + "</td>";
      	        newRow +="<td>" + item.mediItemMakr + "</td>";
      	        newRow +="<td>" + item.mediItemUnit + "</td>";
      	        newRow +="<td>" + item.mediItemUsage + "</td>";
      	        newRow +="<td>" + item.narcoticYn + "</td>";
      	        newRow +="<td>" + item.mediItemPrice + "</td>";
      	        newRow +="<td>" + item.mediItemInvrQty + "</td>";
      	        newRow +="<td>" + item.mediItemLeastQty + "</td>";
      	        var date = new Date(item.mediItemRegDate);
      	        var year = date.getFullYear();
      	        var month = (date.getMonth() + 1).toString().padStart(2, '0');
      	        var day = date.getDate().toString().padStart(2, '0');
      	        var formattedDate = year + '-' + month + '-' + day;
      	        newRow +="<td>" + formattedDate + "</td>";
      	        newRow +="</tr>";
     	      });
   	        $("#mediInventory").html(newRow);
	         },
	         error: function(xhr, status, error) {
	        	    console.log("code: " + xhr.status);
	        	    console.log("message: " + xhr.responseText);
	        	    console.log("error: " + error);
	        	}
		})
	}
	
	function mediItemtrtd(fmediItemtrtd){
		let row = "<thead>";
	      row += "<tr>";
	      row += "<th>약품코드</th>";
	      row += "<th>약품명</th>";
	      row += "<th>재고수량</th>";
	      row += "<th>단위</th>";
	      row += "<th>용법</th>";
	      row += "<th>마약성여부</th>";
	      row += "<th>최소재고수량</th>";
	      row += "<th>최신발주일자</th>";
	      row += "</tr>";
	      row += "</thead>";
	      return row;
	}
	
	function itemtrtd(fitemtrtd){
		let row = "<thead>";
	      row += "<tr>";
	      row += "<th>비품코드</th>";
	      row += "<th>비품명</th>";
	      row += "<th>용도</th>";
	      row += "<th>재고수량</th>";
	      row += "<th>최소재고</th>";
	      row += "<th>최신발주일자</th>";
	      row += "</tr>";
	      row += "</thead>";
	      return row;
	}
	// 신청확인 테이블 함수
	function tabletrtd(fthis){
		
		let table =`<tr>
			<th>선택</th>
			<th id="thItemCode">코드</th>
			<th id="thItemName">명</th>
			<th>수량</th>
			<th>신청 일시</th>
			<th>비고</th>
		</tr>`;
		for(let i=1; i<=10;i++){
			table +="<tr>"
			table +='<td class="checktd"style="text-align: center;"><input type="checkbox" name="typArr" class="typCls" data-medi-item-code="" data-medi-item-req-qy=""></td>';
			table +='<td class="uptableTrCounter"></td>';
			table +='<td></td>';
			table +='<td></td>';
			table +='<td></td>';
			table +='<td></td>';
			table +="</tr>";
				
		}
		$("#uptable").html(table);
		return table
	}
	$('#reqDate').val(new Date().toISOString().substring(0,10));
	
	// 신청 확인 - > 전체 전택 
	$("#chkAll").click(function(){
	    if($("#chkAll").is(":checked")){
	      $("input[name=typArr]").prop("checked", true);
	    }else {
	      $("input[name=typArr]").prop("checked", false);
	    }
	  });
	  
	  $("input[name=typArr]").click(function(){
	    var totalArr = $("input[name=typArr]").length;
	    var checked = $("input[name=typArr]:checked").length;
	    
	    if(totalArr != ckecked){
	      $("#cbx_chkAll").prop("checked", false);
	    }else{
	      $("#cbx_chkAll").prop("checked", true);
	    }
	  });
	// 비품 리스트 함수
	function itemList(fItemList){
    	$.ajax({
			method:"get",
	         url: "/item/InventoryitemList",
	         async:true,
	         dataType : "json",
	         success: function(rslt) {
	        	    console.log("체크", rslt);
	        	   
        	        var newRow = "";
        	        newRow += itemtrtd();
                    newRow += '<tbody class="table-border-bottom-0">';
					
	        	    $.each(rslt, function(index, item) {
	        	        // 각 열(td)에 데이터를 추가합니다.
	        	        newRow +="<tr>";
	        	        newRow +="<td><a href='#'>" + item.itemCode + "</a></td>";
	        	        newRow +="<td>" + item.itemName + "</td>";
	        	        newRow +="<td>" + item.itemUsage + "</td>";
	        	        if(item.itemInvrQty<=item.itemInvrLeastQty){
	        	        	newRow += '<td style="color:red;">' + item.itemInvrQty + '</td>';
	        	        }else{
		        	        newRow +="<td>" + item.itemInvrQty + "</td>";	        	        	
	        	        }
		        	        newRow +="<td>" + item.itemInvrLeastQty + "</td>";
	        	        newRow +="<td>" + item.itemInvrRegDateStr + "</td>";
	        	        newRow +="</tr>";
	                    newRow +="</tbody>";
	        	        
	        	    });
	        	        $("#mediInventory").html(newRow);
	        	},
	        	error: function(xhr, status, error) {
	        	    console.log("code: " + xhr.status);
	        	    console.log("message: " + xhr.responseText);
	        	    console.log("error: " + error);
	        	}
		});
	}
	// 약품 리스트 함수
	function mediItemList(fMediList){
    	$.ajax({
			method:"get",
	         url: "/item/InventorymediList",
	         async:true,
	         dataType : "json",
	         success: function(rslt) {
	        	    console.log("체크", rslt);
        	        var newRow =  mediItemtrtd();
        	        newRow += '<tbody class="table-border-bottom-0">';
	        	    $.each(rslt, function(index, item) {
	        	        // 각 열(td)에 데이터를 추가합니다.
	        	        newRow +="<tr>";
	        	        newRow +="<td><a href='#'>" + item.mediItemCode + "</a></td>";
	        	        newRow +="<td style='text-align: left;'>" + item.mediItemName + "</td>";
	        	        if(item.mediItemInvrQty<=item.mediItemLeastQty){
	        	        	newRow+='<td style="color:red;">' + item.mediItemInvrQty + "</td>";
	        	       	}else{
	        	       		newRow+='<td>' + item.mediItemInvrQty + "</td>";
						}
	        	        newRow +="<td>" + item.mediItemUnit + "</td>";
	        	        newRow +="<td>" + item.mediItemUsage + "</td>";
	        	        newRow +="<td>" + item.narcoticYn + "</td>";

	        	        newRow +="<td>" + item.mediItemLeastQty + "</td>";
	        	        var date = new Date(item.mediItemRegDate);
	        	        var year = date.getFullYear();
	        	        var month = (date.getMonth() + 1).toString().padStart(2, '0');
	        	        var day = date.getDate().toString().padStart(2, '0');
	        	        var formattedDate = year + '-' + month + '-' + day;
	        	        newRow +="<td>" + formattedDate + "</td>";
	        	        newRow +="</tr>";
	                    newRow +="</tbody>";
	        	        
	        	    });
	        	        $("#mediInventory").html(newRow);
	        	},
	        	error: function(xhr, status, error) {
	        	    console.log("code: " + xhr.status);
	        	    console.log("message: " + xhr.responseText);
	        	    console.log("error: " + error);
	        	}
		});
	}
});

</script>

<div class="grid-stack"></div>

<script type="text/javascript">
	
	// 그리드 스택 아이템 정의
	let gridStack1 = `<div id="inventory" style=" height:100%; padding:40px; overflow: none;">
      <h5 class="card-header" style="padding:0px;">재고 현황</h5>
    
    <div class="input-group" id= "searchBar">
      <span class="input-group-text"><i class="tf-icons bx bx-search"></i></span>
      <input type="text" id="searchText"class="form-control" placeholder="Search...">
      <button id="searchButton" type="button" class="btn btn-info" style="margin-left:10px;">검색</button>
    </div><br>

 <div class="nav-align-top mb-4">
     <ul class="nav nav-tabs" role="tablist">
          <li class="nav-item" role="presentation">
            <button type="button"  id="mediItem" class="nav-link" role="tab" data-bs-toggle="tab" data-bs-target="#navs-top-home" aria-controls="navs-top-home" aria-selected="false" tabindex="-1">약품</button>
          </li>
          <li class="nav-item" role="presentation">
            <button type="button" id="item" class="nav-link" role="tab" data-bs-toggle="tab" data-bs-target="#navs-top-profile" aria-controls="navs-top-profile" aria-selected="false" tabindex="-1">비품</button>
     </ul>
  <div class="tab-content" style="width: 145%; height:670px;">
    <div class="tab-pane fade" id="navs-top-home" role="tabpanel">
   </div>
  <div class="card">
      <div class="table-responsive text-nowrap" style="max-height: 600px; overflow-y:auto;">
        <table class="table table-hover" id="mediInventory" style="height:100%;">

       </table>
   </div>
  </div>
</div>
   </div>`;
     let gridStack2 = `<div id="div2" style="width:100%; height:100%; padding:10px;">
							<div id="ii" style="background-color:white;">
							<h4 id="medicheckOK" style="float:left; font-weight: bold;margin:10px 0px 10px 0px;">약품신청</h4></br></br>
							<input type="hidden"id="code"value="admin"/>
						 <div class="form-labelDiv">
						    <label for="name" class="form-label">신청자명 :</label>
						    <input id="name" class="form-control form-control-sm" type="text" placeholder="">
						  </div>
						  <div class="form-labelDiv">
						    <label for="itemCode" class="form-label">약품코드 :</label>
						    <input id="itemCode" class="form-control form-control-sm" type="text" placeholder="">
						  </div>
						  <div class="form-labelDiv">
						    <label for="itemName" class="form-label">약품명 :</label>
						    <input id="itemName" class="form-control form-control-sm" type="text" placeholder="">
						  </div>
						  <div class="form-labelDiv">
						    <label for="reqDate" class="form-label">신청일시 :</label>
						    <input id="reqDate" class="form-control form-control-sm" type="date" placeholder="">
						  </div>
						  <div class="form-labelDiv">
						    <label for="reqQy" class="form-label">수량 :</label>
						    <input id="reqQy" class="form-control form-control-sm" type="number" pattern="[0-9]+"  required placeholder="">
						  </div>
					       

					        <button type="button" style="margin-top:20px; float:right;" class="btn btn-secondary" id="cancellItem">취소</button>
							<button type="button" style="margin-top:20px; float:right;" class="btn btn-primary" id="apcBtn">확인</button><br><br><br></br><hr>
		
						<div id="dd" style="background-color:white;text-align: left; ">
						<h4 id="medicheck"style="float: left;font-weight: bold; margin:5px;">약품신청확인</h4>
						<input class="form-check-input me-1"style="margin-top:0px;" type="checkbox" name='typArr' value="selectall" id="chkAll"> <b>전체선택</b> 
						</br></br>
						<div class="card">
						  <div class="table-responsive text-nowrap">
						    <table class="table table-hover" id="uptable" style="width: 100%;">
						      <thead>

						      </thead>
						      <tbody class="table-border-bottom-0">
						        <tr>
						      
						      </tbody>
						    </table>
						  </div>
						</div>

							<button type="button" style="margin-top:20px; float:right;"class="btn btn-secondary" id="cancelBtn">취소</button>
							<button type="button" style="margin-top:20px; float:right;"class="btn btn-primary" id="submitBtnMedi">신청</button>
							<button type="button" style="margin-top:20px; float:right;"class="btn btn-primary" id="submitBtnItem">신청</button>
						</div>
							</div>
						</div>`;
// 그리드 스택 아이템 배열
var items = [
    { w: 9, h: 6, float: false, content: gridStack1 },
    { w: 3, h: 6, float: false, content: gridStack2 },
];

// 그리드 스택 초기화
var grid = GridStack.init();
grid.load(items);
</script>
<script type="text/javascript">
$(function(){
	//약품 신청
	$("#submitBtnMedi").on("click",function(){
		console.log("개똥이");
		
		//<form></form>
		let formData = new FormData();
		
		$(".typCls").each(function(idx){
			if($(this).is(":checked")){
				console.log($(this).data("mediItemCode"));
				console.log($(this).data("mediItemReqQy"));
				// <input type="text" name="mediItemReqDetailVOList[0].mediItemCode" value="52400801" />
				// <input type="text" name="mediItemReqDetailVOList[0].mediItemReqQy" value="2" />
				// <input type="text" name="mediItemReqDetailVOList[1].mediItemCode" value="622700220" />
				// <input type="text" name="mediItemReqDetailVOList[1].mediItemReqQy" value="1" />
				formData.append("mediItemReqDetailVOList["+idx+"].mediItemCode",$(this).data("mediItemCode"));
				formData.append("mediItemReqDetailVOList["+idx+"].mediItemReqQy",$(this).data("mediItemReqQy"));
			}
		});
		
		//아작나써유..피씨다타써
		$.ajax({
			url :"/item/insertTbMediItemRequest",
			processData : false,
			contentType : false,
			data : formData,
			type : "post",
			success:function(result){
				console.log("result :" +result);
				alert("성공");
				if(result =="success"){
					clearSelectedRows();	
				}else{
					alert("실패")
				}
			},
			error: function(xhr, status, error) {
        	    console.log("code: " + xhr.status);
        	    console.log("message: " + xhr.responseText);
        	    console.log("error: " + error);
        	}
		});
	});
	
	//비품신청
	$("#submitBtnItem").on("click",function(){
		console.log("개똥이itme");
		
		//<form></form>
		let formData = new FormData();
		
		$(".typCls").each(function(idx){
			if($(this).is(":checked")){
				console.log($(this).data("mediItemCode"));
				console.log($(this).data("mediItemReqQy"));
				//               itemReqDetailVOList
				formData.append("itemReqDetailVOList["+idx+"].itemCode",$(this).data("mediItemCode"));
				formData.append("itemReqDetailVOList["+idx+"].itemReqQy",$(this).data("mediItemReqQy"));
			}
		});
		
		//아작나써유..피씨다타써
		$.ajax({
			url :"/item/insertTbItemRequest",
			processData : false,
			contentType : false,
			data : formData,
			type : "post",
			success:function(result){
				alert("성공");
				clearSelectedRows();
			},
			error: function(xhr, status, error) {
        	    console.log("code: " + xhr.status);
        	    console.log("message: " + xhr.responseText);
        	    console.log("error: " + error);
        	}
		});
	});
	function clearSelectedRows() {
	    // 체크된 체크박스를 반복하여 처리
	    $('#uptable input[type="checkbox"]:checked').each(function () {
	        var $tr = $(this).closest('tr'); // 현재 체크박스의 부모 행 가져오기
	        var $tds = $tr.find('td:not(:first)'); // 체크박스를 제외한 모든 <td> 요소 가져오기

	        // 각 <td> 요소에 대해 처리
	        $tds.each(function () {
	            var $td = $(this);
	            var currentText = $td.text().trim();

	            // 값이 이미 null이면 체크를 해제하고 해당 <td>는 수정하지 않음
	            if (currentText == "") {
	                $td.siblings(':first').find('input[type="checkbox"]').prop("checked", false);
	            } else {
	                $td.text(''); // 값이 null이 아니면 <td>의 내용을 지움
	            }
	        });
	        $tr.remove();
	        $("#uptable").append("<tr><td style='text-align: center;'><input type='checkbox' name='typArr' class='typCls' data-medi-item-code='' data-medi-item-req-qy=''></td><td class='uptableTrCounter'></td><td></td><td></td><td></td><td></td></tr>");
	    });
	    
	    let cnt =0;
	    $(".uptableTrCounter").each(function(inx,jTd){
	    	//console.log("체킁킁:",inx," ",jTd);
	    	if($(jTd).html() !="") cnt++;
	    })

	    // 입력 필드 초기화
	    $("#itemName").val("");
	    $("#itemCode").val("");
	    $("#reqQy").val("");

	    //  변수 초기화
	    rowIndex = cnt+2;

	}
	
	// cancelBtn 클릭 시 clearSelectedRows 함수 실행
	$("#cancelBtn").on("click", function(){
		clearSelectedRows();
		
	});

});
</script>



