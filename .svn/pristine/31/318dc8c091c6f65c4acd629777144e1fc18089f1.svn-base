package kr.or.ddit.item.service.serviceImpl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.item.mapper.InventoryMapper;
import kr.or.ddit.item.mapper.ItemRequestMapper;
import kr.or.ddit.item.service.InventoryService;
import kr.or.ddit.item.service.itemRequestService;
import kr.or.ddit.item.vo.ItemListVO;
import kr.or.ddit.item.vo.ItemReqDetailVO;
import kr.or.ddit.item.vo.ItemReqVO;
import kr.or.ddit.item.vo.ItemWaitingListVO;
import kr.or.ddit.item.vo.MediItemInventoryVO;
import kr.or.ddit.item.vo.MediItemListVO;
import kr.or.ddit.item.vo.MediItemReqDetailVO;
import kr.or.ddit.item.vo.MediItemRequestVO;
import kr.or.ddit.item.vo.MediItemWaitingListVO;
import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
public class itemRequestServiceImpl implements itemRequestService {
	@Autowired
	private ItemRequestMapper itemRequestMapper;

	@Transactional
	@Override
	public int insertMediItemRequest(MediItemRequestVO mediItemRequestVO) {

		// 1) 부모(TB_MEDI_ITEM_REQUEST) insert : mediItemRequestVO 활용 => insert
		int result = this.itemRequestMapper.insertMediItemRequest(mediItemRequestVO); // 수정된 메서드 호출

		// 2) 자식들(TB_MEDI_ITEM_REQ_DETAIL) insert : List<MediItemReqDetailVO>
		// mediItemReqDetailVOList => insert all
		List<MediItemReqDetailVO> mediItemReqDetailVOList = mediItemRequestVO.getMediItemReqDetailVOList();
		log.info("쳌쳌" + mediItemRequestVO);
		for (MediItemReqDetailVO vo : mediItemReqDetailVOList) {
			vo.setMediItemReqNo(mediItemRequestVO.getMediItemReqNo());
		}
		log.info("췍2" + mediItemReqDetailVOList);
		// [MediItemReqDetailVO(mediItemReqNo=37, mediItemCode=641602350,
		// mediItemReqQy=53, mediItemReqTotal=0),
		// MediItemReqDetailVO(mediItemReqNo=37, mediItemCode=641602350,
		// mediItemReqQy=33, mediItemReqTotal=0)]
		log.info("insertMediItemRequest->mediItemReqDetailVOList : " + mediItemReqDetailVOList);
		result += this.itemRequestMapper.insertMediItemReqDetail(mediItemReqDetailVOList);
//		log.info("췍3" + mediItemReqDetailVOList);

		return result;
	}
	@Transactional
	@Override
	public int insertItemReq(ItemReqVO itemReqVO) {
	      int result = this.itemRequestMapper.insertItemRequest(itemReqVO);
	      
	      List<ItemReqDetailVO> itemReqDetailVOList=  itemReqVO.getItemReqDetailVOList();
	      log.info("쳌쳌" + itemReqVO);
	      for(ItemReqDetailVO vo : itemReqDetailVOList) {
	    	 vo.setItemReqNo(itemReqVO.getItemReqNo());
	    	 log.info("이거 확인해보자 : " + vo);
	      }
	      log.info("췍2" + itemReqDetailVOList);
	      result += this.itemRequestMapper.insertItemReqDetail(itemReqDetailVOList);
	      return result;
	   }
	@Override
	public List<MediItemWaitingListVO> selectWaitingmediList(){
		return itemRequestMapper.selectWaitingmediList();
	}
	@Override
	public List<ItemWaitingListVO> selectWatitingItemList(){
		return itemRequestMapper.selectWatitingItemList();
	}
	
	@Override
	public List<MediItemRequestVO> selectWaitingUpdateList(MediItemRequestVO mediItemRequestVO) {
	    return itemRequestMapper.selectWaitingUpdateList(mediItemRequestVO);
	}


}