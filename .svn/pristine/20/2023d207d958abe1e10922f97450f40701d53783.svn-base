package kr.or.ddit.board.controller;

import java.security.Principal;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.board.service.NoticeService;
import kr.or.ddit.board.vo.NoticeBoardVO;
import kr.or.ddit.employee.service.EmployeeManageService;
import kr.or.ddit.employee.vo.EmployeeVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/board")
public class NoticeController {

	@Autowired
	NoticeService noticeService;
	
	// 리스트 뷰
	@GetMapping("/notice")
	public String getListView() {
		return "board/noticeList";
	}
	
	// select 공지사항list
	@ResponseBody
	@GetMapping("/list")
	public List<NoticeBoardVO> getNoticeList() {
		log.info("<<< 여기는 getNoticeList >>>");
		
		return noticeService.noticeList(); 
	}
	
	// 글쓰기 뷰
	@GetMapping("/write")
	public String getWriteView() {
		log.info("<<< 여기는 getWriteView >>> ");
		
		return "board/noticeWrite";
	}
	
	// insert 공지사항
	@PostMapping("/write")
	public String insertNotice(NoticeBoardVO noticeBoardVO) {
		log.info("<<< 여기는 insertNotice >>>");
		
		noticeService.insertNotice(noticeBoardVO);
		log.info("noticeBoardVO: " + noticeBoardVO);
		
		return "redirect:/board/notice";
	}

	// select 공지사항 1개 + 게시글 상세조회 뷰
	@GetMapping("/detail/{ntbdCode}")
	public String getDetailView(@PathVariable String ntbdCode, Model model) {
		log.info("<<< 여기는 getDetailView >>>");
		
		NoticeBoardVO noticeBoardVO = new NoticeBoardVO();
		noticeBoardVO.setNtbdCode(ntbdCode);
		
		// 조회수 증가
		noticeService.updateHit(noticeBoardVO);

		// get one notice
		noticeBoardVO = noticeService.oneNotice(ntbdCode);
		log.info("getDetailView->noticeBoardVO : " + noticeBoardVO);
		
		model.addAttribute("noticeBoardVO", noticeBoardVO);
		
		return "board/noticeDetail";
	}
	
	// delete
	@ResponseBody
	@DeleteMapping("/delete/{ntbdCode}")
	public int deleteNotice(@PathVariable String ntbdCode) {
		log.info("<<< 여기는 deleteNotice >>>");
		
		return noticeService.deleteNotice(ntbdCode);
	}
	
	// 수정 뷰
	@GetMapping("/update/{ntbdCode}")
	public String getUpdateView(@PathVariable String ntbdCode, Model model) {
		log.info("<<< 여기는 getUpdateView >>>");
		
		NoticeBoardVO noticeBoardVO = new NoticeBoardVO();
		noticeBoardVO.setNtbdCode(ntbdCode);
		
		noticeBoardVO = noticeService.oneNotice(ntbdCode);
		model.addAttribute("noticeBoardVO", noticeBoardVO);
		
		return "board/noticeModify";
	}
	
	// update
	@PutMapping("/update")
	public int updateNotice(NoticeBoardVO noticeBoardVO) {
		log.info("<<< 여기는 updateNotice >>>");
		
		return noticeService.updateNotice(noticeBoardVO);
	}
	
}
