package kr.or.ddit.item.controller;

import java.security.Principal;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.item.service.itemOrderService;
import kr.or.ddit.item.vo.ItemReqDetailVO;
import kr.or.ddit.item.vo.MediItemReqDetailVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@Slf4j
@RequestMapping("/order")
public class ItemOrderController {
	
	@Autowired
	private itemOrderService service;
	
	// [view] 약품 메인 view
	@GetMapping(value="/mediItem")
	public String getMediItemView() {
		log.info("<<< 여기는 getMediItemView >>>");
		
		return "order/mediItem";
	}
	
	// [view] 비품 메인 view
	@GetMapping(value="/equipItem")
	public String getEquipItemView() {
		log.info("<<< 여기는 getEquipItemView >>>");
		
		return "order/equipItem";
	}
	
	// [select List] 약품 신청 조회
	@ResponseBody
	@GetMapping(value="/mediList", produces="application/json; charset=utf-8")
	public List<MediItemReqDetailVO> getMediItemList() {
		log.info("<<< 여기는 getMediItemList >>>");
		
		List<MediItemReqDetailVO> mediItemList = service.getMediItemList();
		return mediItemList; 
	}
	
	// [select List] 비품 신청 조회
	@ResponseBody
	@GetMapping(value="/equipList", produces="application/json; charset=utf-8")
	public List<ItemReqDetailVO> getEquipItemList() {
		log.info("<<< 여기는 getEquipItemList >>>");
		
		List<ItemReqDetailVO> equipItemList = service.getEquipItemList();
		
		return equipItemList;
	}
	
	// [select] 약품리스트에 있는 거래처 조회 (발주모달의 select option)
	@ResponseBody
	@GetMapping(value="/mediCompanyList", produces="application/json; charset=utf-8")
	public List<MediItemReqDetailVO> getMediCompanyName() {
		log.info("<<< 여기는 getCompanyName >>>");
		
		List<MediItemReqDetailVO> companyList = service.getMediCompanyName();
		return companyList;
	}
	
	// [select] 비품리스트에 있는 거래처 조회 (발주모달의 select option)
	@ResponseBody
	@GetMapping(value="/equipCompanyList", produces="application/json; charset=utf-8")
	public List<ItemReqDetailVO> getItemCompanyName() {
		log.info("<<< 여기는 getItemCompanyName >>>");
		
		List<ItemReqDetailVO> companyList = service.getItemCompanyName();
		return companyList;
	}
	
	// [select] 거래처별 약품리스트 (발주모달의 table)
	@ResponseBody
	@GetMapping(value="/mediListByCompany/{companyName}", produces="application/json; charset=utf-8")
	public List<MediItemReqDetailVO> mediItemByCompany(@PathVariable String companyName) {
		log.info("<<< 여기는 mediItemByCompany >>>");
		
		List<MediItemReqDetailVO> listByCompany = service.mediItemByCompany(companyName);
		
		return listByCompany;
	}
	
	// [select] 거래처별 비품리스트 (발주모달의 table)
	@ResponseBody
	@GetMapping(value="/equipListByCompany/{companyName}", produces="application/json; charset=utf-8")
	public List<ItemReqDetailVO> equipItemByCompany(@PathVariable String companyName) {
		log.info("<<< 여기는 mediItemByCompany >>>");
		
		List<ItemReqDetailVO> listByCompany = service.equipItemByCompany(companyName);
		
		return listByCompany;
	}
	
	// [update] 약품 발주 승인
	@ResponseBody
	@PutMapping(value="/approveMedi", produces="application/json; charset=utf-8")
	public int approveMedi(@RequestBody List<MediItemReqDetailVO> mediArray, Principal principal) {
		log.info("<<< 여기는 approveMedi >>>");
		int result = 0;
		
		for(int i=0; i<mediArray.size(); i++) {
//			log.info("mediArray[" + i + "]: " + mediArray.get(i));
			mediArray.get(i).setEmpNo(principal.getName());
			result += service.approveMedi(mediArray.get(i));
		}
		return result;
	}
	
	// [update] 비품 발주 승인
	@ResponseBody
	@PutMapping(value="/approveEquip", produces="application/json; charset=utf-8")
	public int approveEquip(@RequestBody List<ItemReqDetailVO> equipArray, Principal principal) {
		log.info("<<< 여기는 approveEquip >>>");
		int result = 0;
		
		for(int i=0; i<equipArray.size(); i++) {
//			log.info("equipArray[" + i + "]: " + equipArray.get(i));
			equipArray.get(i).setEmpNo(principal.getName());
			result += service.approveEquip(equipArray.get(i));
		}
		return result;
	}
	
	// [select] 약품 상세조회
	@ResponseBody
	@PostMapping(value="/rejectMediList", produces="application/json; charset=utf-8")
	public List<MediItemReqDetailVO> rejectMediList(@RequestBody List<MediItemReqDetailVO> mediArray) {
		log.info("<<< 여기는 rejectMediList >>>");
		List<MediItemReqDetailVO> mediList = new ArrayList<MediItemReqDetailVO>();
		MediItemReqDetailVO mediVO = new MediItemReqDetailVO();
		
		for(int i=0; i<mediArray.size(); i++) {
			log.info("mediArray[" + i + "]: " + mediArray);
			mediVO = service.rejectMediList(mediArray.get(i));
			log.info(i + "번째 MediVO: " + mediVO);
			mediList.add(mediVO);
		}
		return mediList;
	}
	
	// [select] 비품 상세조회
	@ResponseBody
	@GetMapping(value="/rejectEquipList", produces="application/json; charset=utf-8")
	public List<ItemReqDetailVO> rejectEquipList(@RequestBody List<ItemReqDetailVO> equipArray) {
		log.info("<<< 여기는 rejectEquipList >>>");
		List<ItemReqDetailVO> equipList = null;
		ItemReqDetailVO equipVO = null;
		
		for(int i=0; i<equipArray.size(); i++) {
			log.info("equipArray[" + i + "]: " + equipArray);
			equipVO = service.rejectEquipList(equipArray.get(i));
			equipList.add(equipVO);
		}
		return equipList;
	}
	
	// [update] 약품 발주 반려
	@ResponseBody
	@PutMapping(value="/rejectMedi", produces="application/json; charset=utf-8")
	public int rejectMedi(@RequestBody List<MediItemReqDetailVO> mediArray) {
		log.info("<<< 여기는 rejectMedi >>>");
		int result = 0;
		
		for(int i=0; i<mediArray.size(); i++) {
			log.info("mediArray[" + i + "]: " + mediArray.get(i));
			result += service.rejectMedi(mediArray.get(i));
		}
		return result;
	}
	
	// [update] 약품 발주 반려
	@ResponseBody
	@PutMapping(value="/rejectEquip", produces="application/json; charset=utf-8")
	public int rejectEquip(@RequestBody List<ItemReqDetailVO> equipArray) {
		log.info("<<< 여기는 rejectEquip >>>");
		int result = 0;
		
		for(int i=0; i<equipArray.size(); i++) {
			log.info("equipArray[" + i + "]" + equipArray.get(i));
			result += service.rejectEquip(equipArray.get(i));
		}
		return result;
	}
	
	// [view] 발주 내역 조회 
	@GetMapping("/detail")
	public String getDetailView() {
		log.info("<<< 여기는 getDetailView >>>");
		
		return "order/detail";
	}

}
